import numpy as np
import pandas as pd

def main():
    """
    (1) このニューラルネットワークは、何次元の入力（説明変数）を処理するニューラルネットワークか？
    2次元
    (2) このニューラルネットワークは何層のニューラルネットワークか？
    2層
    (3) 前のページの A 層、B 層、C 層をなんというか。
    A 層 :入力層 
    B 層 : 中間層
    C 層 : 出力層
    """
    """
    (1) x1 = 1.0, x2 =-2.5 を入力したときにニューロン 1 に入ってくる値u1を計算せよ。
    """
    x = np.array([1.0, -2.5])
    w = np.array([0.8, 0.7])
    u1 = np.dot(x, w)
    print(f"問2 (1): {u1}", "\n")
    """
    (2) x1=1.0 でニューロン2に入ってくる値u2が -2.7 とすると x2 の値は何だったと考えられるか。
    """
    x = np.array([1.0, -2.5])
    w = np.array([0.9, -1.2])
    u2 = -2.7
    x2 = (u2 - (1.0 * 0.9)) / -1.2
    print(f"問2 (2): {x2}", end="\n")
    """
    問3
    (1) 全てのニューロンの活性化関数 f(x) は全て恒等関数（入れた値と同じ値が出てくる関数 f(x)=x ）とする。

    重みは図のとおりとする。

    (x1, x2)の値が TSV（タブ区切り）に入っていて、各行の(x1, x2)に対して C 層の出力を計算するようなプログラムをかけ。
    （サンプルの TSV と途中までのコードをこちらにおいておく。こちらを使って完成させなさい）
    """

    df = pd.read_csv("sample.tsv", sep="\t")
    print("問3(1)")
    [print(f"z = {calc(x1, x2)} y = {y}") for x1, x2, y in zip(df["x1"], df["x2"], df["y"])]

def calc(x1, x2):
    """
    (1) x1 = 1.0, x2 =-2.5 を入力したときにニューロン 1 に入ってくる値u1を計算せよ。
    """
    X = np.array([x1, x2])
    w1 = np.array([[0.8, 0.9, 1.2], 
                   [0.7, -1.2, 1.1]])
    
    w2 = np.array([-0.8, 0.2, 1.5])

    A1 = np.dot(X, w1)
    Z1 = identity(A1)

    A2 = np.dot(Z1, w2)
    Z2 = identity(A2)

    return Z2


def identity(A):
    return A



if __name__ == "__main__":
    main()